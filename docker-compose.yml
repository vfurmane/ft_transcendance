version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: web
    image: ft_transcendence/web:nextjs13
    depends_on:
      - api
    restart: always
    networks:
      - app
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: api
    image: ft_transcendence/api:nestjs9
    depends_on:
      database:
        condition: service_healthy
    restart: always
    environment:
      POSTGRES_HOST: database
      POSTGRES_USERNAME: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DATABASE: ${DATABASE_NAME}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
      FT_OAUTH2_CLIENT_ID: ${FT_OAUTH2_CLIENT_ID}
      FT_OAUTH2_CLIENT_SECRET: ${FT_OAUTH2_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - app
  database:
    image: postgres
    container_name: database
    restart: always
    networks:
      - app
    environment:
      POSTGRES_RANDOM_ROOT_PASSWORD: true
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_PORT: ${DATABASE_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USERNAME}", "-d", "${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 50
  server:
    image: nginx:stable-alpine
    container_name: ft_transcendence-nginx
    depends_on:
      - web
      - api
    restart: always
    networks:
      - app
    volumes:
      - ./templates:/etc/nginx/templates
    ports:
      - 8080:80

networks:
  app:
